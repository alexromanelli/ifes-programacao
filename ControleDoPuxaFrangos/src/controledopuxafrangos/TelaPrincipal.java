/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controledopuxafrangos;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author romanelli
 */
public class TelaPrincipal extends javax.swing.JFrame {
    
    private static TelaPrincipal INSTANCE;
    public static TelaPrincipal getInstance() {
        if (INSTANCE == null)
            INSTANCE = new TelaPrincipal();
        return INSTANCE;
    }
    
    private ArrayList<Comando> listaComandos;

    protected ArrayList<Comando> getListaComandos() {
        return listaComandos;
    }

    public void incluirComandoNaLista(Comando c) {
        // incluir o comando c na lista
        listaComandos.add(c);

        // atualizar a exibiçao da tabela
        ((ModeloTabelaComandos) jtableListaComandos.getModel()).
                fireTableDataChanged();
    }
    
    private void lerArquivoDeComandos(String caminhoArquivo) {
        try {
            BufferedReader leitor = new BufferedReader(
                    new FileReader(caminhoArquivo));
            String linha = null;
            while ((linha = leitor.readLine()) != null) {
                Comando c = null;
                String[] valores = linha.split(" ");
                if (valores[0].equals("G")) {
                    // criar um objeto da classe ComandoGarra em c
                } else if (valores[0].equals("P")) {
                    // criar um objeto da classe ComandoMovimento em c
                }
                listaComandos.add(c);
            }
        } catch (FileNotFoundException ex) {
            // criar mensagem amigável...
        } catch (IOException ex) {
            // criar mensagem amigável...
        }
    }

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
        listaComandos = new ArrayList<Comando>();
        jtableListaComandos.setModel(new ModeloTabelaComandos(listaComandos));
        listaComandos.add(new ComandoGarra(1, 120));
        listaComandos.add(new ComandoMovimento(2, -40, 50, 70));
        listaComandos.add(new ComandoMovimento(3, -30, 60, 60));
        listaComandos.add(new ComandoMovimento(4, -20, 70, 50));
        listaComandos.add(new ComandoMovimento(5, -10, 80, 40));
        listaComandos.add(new ComandoGarra(6, 150));
        ((ModeloTabelaComandos) jtableListaComandos.getModel()).
                fireTableDataChanged();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jButtonSalvar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButtonIncluirComando = new javax.swing.JButton();
        jbuttonExecutarComandos = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableListaComandos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle do Puxa-Frangos");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButton2.setText("Carregar");

        jButtonIncluirComando.setText("Incluir comando");
        jButtonIncluirComando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirComandoActionPerformed(evt);
            }
        });

        jbuttonExecutarComandos.setText("Executar comandos");
        jbuttonExecutarComandos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbuttonExecutarComandosActionPerformed(evt);
            }
        });

        jButton5.setText("Novo");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addGap(18, 18, 18)
                .addComponent(jButtonIncluirComando)
                .addGap(18, 18, 18)
                .addComponent(jbuttonExecutarComandos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButton2)
                    .addComponent(jButtonIncluirComando)
                    .addComponent(jbuttonExecutarComandos)
                    .addComponent(jButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtableListaComandos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtableListaComandos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbuttonExecutarComandosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbuttonExecutarComandosActionPerformed
        try {
            BracoRobotico bracoRobotico = BracoRobotico.getInstance();
            bracoRobotico.moverGarra(150);
            Thread.sleep(1000);
            bracoRobotico.moverGarra(130);
            Thread.sleep(1000);
            bracoRobotico.enviarStringComando("p:-30,+70,+50\n");
            Thread.sleep(1000);
            bracoRobotico.enviarStringComando("p:+40,+80,+70\n");
            Thread.sleep(1000);
            bracoRobotico.enviarStringComando("p:-30,+60,+50\n");
        } catch (InterruptedException ex) {
            Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbuttonExecutarComandosActionPerformed

    private void jButtonIncluirComandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirComandoActionPerformed
        TelaInclusaoComando telaInclusaoComando = new TelaInclusaoComando(this, true);
        telaInclusaoComando.setVisible(true);
    }//GEN-LAST:event_jButtonIncluirComandoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            PrintWriter saida = null;
            try {
                File arquivo = fileChooser.getSelectedFile();
                saida = new PrintWriter(
                        new FileWriter(arquivo.getAbsolutePath()));
                
                // escrever uma linha para cada comando da lista "listaComandos"
                for (Comando c : listaComandos) {
                    String comando = "";
                    if (c instanceof ComandoGarra) {
                        comando += "G ";
                        comando += Integer.toString(((ComandoGarra) c).getAngulo());
                    } else if (c instanceof ComandoMovimento) {
                        comando += "P ";
                        comando += Integer.toString(((ComandoMovimento) c).getX());
                        comando += " ";
                        comando += Integer.toString(((ComandoMovimento) c).getY());
                        comando += " ";
                        comando += Integer.toString(((ComandoMovimento) c).getZ());
                    }
                    saida.println(comando);
                }
                
            } catch (IOException ex) {
                // criar mensagem amigável...
            } finally {
                saida.close();
            }
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonIncluirComando;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbuttonExecutarComandos;
    private javax.swing.JTable jtableListaComandos;
    // End of variables declaration//GEN-END:variables
}
