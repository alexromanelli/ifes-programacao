/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controledopuxafrangosg2;

import controledopuxafrangosg2.dados.MovimentoGarra;
import controledopuxafrangosg2.dados.PosicionamentoGarra;
import controledopuxafrangosg2.dados.Comando;
import controledopuxafrangosg2.dados.ListaComandos;
import controledopuxafrangosg2.dao.DAOFactory;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author romanelli
 */
public class TelaInicial extends javax.swing.JFrame {
    
    private static TelaInicial INSTANCE;
    public static TelaInicial getInstance() {
        if (INSTANCE == null)
            INSTANCE = new TelaInicial();
        return INSTANCE;
    }

    private ArrayList<Comando> listaComandos;
    private ListaComandos lista;

    public ArrayList<Comando> getListaComandos() {
        return listaComandos;
    }
    
    public boolean incluirComando(Comando c) {
        c.setLista(lista);
        // inserir comando no banco de dados
        DAOFactory.getDefaultDAOFactory().getComandoDAO().inserir(c);
        // incluir comando na lista de comandos
        listaComandos.add(c);
        // atualizar exibiÃ§ao da lista na tela
        ((ModeloTabelaComandos)jTableComandos.getModel()).fireTableDataChanged();
        return true;
    }
    
    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() { // -----> JTable -> singleSelection, componentPopupMenu
        INSTANCE = this; // <------- precisa melhorar!!!
        initComponents();
        
        listaComandos = DAOFactory.getDefaultDAOFactory().getComandoDAO()
                .selecionarTodosPorIdListaComandos(1);
        lista = DAOFactory.getDefaultDAOFactory().getListaComandosDAO()
                .selecionarPorId(1);
        
        ModeloTabelaComandos modelo = new ModeloTabelaComandos(listaComandos);
        
        jTableComandos.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuComandos = new javax.swing.JPopupMenu();
        jMenuItemAlterar = new javax.swing.JMenuItem();
        jMenuItemExcluir = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jButtonSalvar = new javax.swing.JButton();
        jButtonCarregar = new javax.swing.JButton();
        jButtonNovo = new javax.swing.JButton();
        jButtonIncluirComando = new javax.swing.JButton();
        jButtonExecutarComando = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableComandos = new javax.swing.JTable();

        jMenuItemAlterar.setText("Alterar");
        jPopupMenuComandos.add(jMenuItemAlterar);

        jMenuItemExcluir.setText("Excluir");
        jPopupMenuComandos.add(jMenuItemExcluir);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Controle do Puxa-Frangos");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setPreferredSize(new java.awt.Dimension(80, 27));
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonCarregar.setText("Carregar");
        jButtonCarregar.setPreferredSize(new java.awt.Dimension(80, 27));
        jButtonCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarActionPerformed(evt);
            }
        });

        jButtonNovo.setText("Novo");
        jButtonNovo.setPreferredSize(new java.awt.Dimension(80, 27));

        jButtonIncluirComando.setText("Incluir comando");
        jButtonIncluirComando.setPreferredSize(new java.awt.Dimension(114, 27));
        jButtonIncluirComando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIncluirComandoActionPerformed(evt);
            }
        });

        jButtonExecutarComando.setText("Executar comando");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCarregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                .addComponent(jButtonIncluirComando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonExecutarComando)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCarregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonIncluirComando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonExecutarComando))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableComandos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableComandos.setComponentPopupMenu(jPopupMenuComandos);
        jTableComandos.setName(""); // NOI18N
        jTableComandos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableComandos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIncluirComandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIncluirComandoActionPerformed
        TelaCadastroComando tela = new TelaCadastroComando(this, true);
        tela.setVisible(true);
    }//GEN-LAST:event_jButtonIncluirComandoActionPerformed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                File arquivo = fileChooser.getSelectedFile();
                PrintWriter saida = new PrintWriter(arquivo);
                
                for (Comando c : listaComandos) {
                    String linhaComando = "";
                    if (c instanceof MovimentoGarra) {
                        linhaComando = "G ";
                        MovimentoGarra mg = (MovimentoGarra) c;
                        linhaComando += Integer.toString(mg.getAngulo());
                    } else if (c instanceof PosicionamentoGarra) {
                        linhaComando = "P ";
                        PosicionamentoGarra pg = (PosicionamentoGarra) c;
                        linhaComando += Integer.toString(pg.getX());
                        linhaComando += " ";
                        linhaComando += Integer.toString(pg.getY());
                        linhaComando += " ";
                        linhaComando += Integer.toString(pg.getZ());
                    }
                    
                    saida.println(linhaComando);
                }
                
                saida.close();
                
                JOptionPane.showMessageDialog(this, "Arquivo criado.");
                
            } catch (FileNotFoundException ex) {
                // exibir mensagem amigÃ¡vel ao usuÃ¡rio...
            }
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                File arquivo = fileChooser.getSelectedFile();
                BufferedReader entrada = 
                        new BufferedReader(new FileReader(arquivo));
                listaComandos.clear();
                String linha = null;
                while ((linha = entrada.readLine()) != null) {
                    String[] itens = linha.split(" ");
                    
                    Comando c = null;
                    
                    // criar objeto de comando (MovimentoGarra ou
                    // PosicionamentoGarra) na variÃ¡vel c
                    
                    listaComandos.add(c);
                }
                // atualizar exibiÃ§ao da lista na tela
                ((ModeloTabelaComandos)jTableComandos.getModel())
                        .fireTableDataChanged();
                
            } catch (FileNotFoundException ex) {
                // exibir mensagem amigÃ¡vel ao usuÃ¡rio...
            } catch (IOException ex) {
                // exibir outra mensagem amigÃ¡vel ao usuÃ¡rio...
            }
        }
    }//GEN-LAST:event_jButtonCarregarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCarregar;
    private javax.swing.JButton jButtonExecutarComando;
    private javax.swing.JButton jButtonIncluirComando;
    private javax.swing.JButton jButtonNovo;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JMenuItem jMenuItemAlterar;
    private javax.swing.JMenuItem jMenuItemExcluir;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenuComandos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableComandos;
    // End of variables declaration//GEN-END:variables
}
